\documentclass[10pt,fleqn]{article}
\usepackage{/home/clair/Documents/mystyle}

% define colour to match that used by R
  \definecolor{gold}{rgb}{1.0, 0.84, 0.0}
  
\begin{document}
\renewenvironment{knitrout}{\vspace{1em}}{\vspace{1em}}
<<setup, include=FALSE>>=
opts_chunk$set(size = 'footnotesize',   # smaller font size for chunks
               out.width = '0.25\\textwidth',   # default figure size = quarter of text width
               fig.show = 'hold',   # display all figures at end of chunk
               fig.align='center',
               echo = F)
options(width = 80, digits = 4)
set.seed(24747)
library(xtable)
library("IO.Pixels")


# import data
fpath <- ("../../Other-data/")
df <- read.csv("../../Other-data/Bad-pixels-by-threshold.csv")
df$cell <- apply(df[,c(2:3)], 1, paste, collapse = ", ")

bad.pixel.cols = c("Black", "red", "blue", "gold", "darkgrey")

@

\section*{Channelwise progression of dead pixels}
Initial identification of bad pixels using thresholding from manual:
\begin{itemize}[leftmargin = 2cm]
\item[\textbf{Dead}] \textcolor{black}{$\bullet$} \,
Pixelwise mean value == 0
\vspace{-5pt}
\item[\textbf{Hot}] \textcolor{red}{$\bullet$} \,
Pixelwise mean value == 65535
\vspace{-5pt}
\item[\textbf{Noisy}] \textcolor{blue}{$\bullet$} \,
Pixelwise SD > 6$\times$ median pixelwise SD
\vspace{-5pt}
\item[\textbf{Bright}] \textcolor{gold}{$\bullet$} \,
Pixel value > 1.5$\times$ median pixel value
\vspace{-5pt}
\item[\textbf{Dim}] \textcolor{gray}{$\bullet$} \,
Pixel value < 0.45$\times$ median pixel value
\end{itemize}

<<xtable-by-channel, results = 'asis'>>=
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- 0
addtorow$command <- c('& \\multicolumn{2}{c|}{Black}
                      & \\multicolumn{2}{c|}{Grey}
                      & \\multicolumn{2}{c}{White} \\\\
                      & 14-10-09 & 15-08-28 & 14-10-09 & 15-08-28 & 14-10-09 & 15-08-28 \\\\\n')

xt <- xtabs(~ type + src, data = df)
rownames(xt) <- c("Dead", "Hot", "Noisy", "Bright", "Dim")
xt[xt == 0] <- NA

print(xtable(xt, 
             align = "l|cc|cc|cc",
             caption = "Bad pixels identified by simple thresholding"),
      caption.placement = "top", 
      add.to.row = addtorow, include.colnames = F,
      size = "footnotesize", 
      NA.string = "",
      table.placement = "!h")
@

<<xtable-changes, results = 'asis'>>=
change.b <- merge(df[df$src == "b.141009", c(4:5)],
                  df[df$src == "b.150828", c(4:5)],
                  by = "cell", all = T, suffixes = c(".141009", ".150828"))

change.g <- merge(df[df$src == "g.141009", c(4:5)],
                  df[df$src == "g.150828", c(4:5)],
                  by = "cell", all = T, suffixes = c(".141009", ".150828"))

change.w <- merge(df[df$src == "w.141009", c(4:5)],
                  df[df$src == "w.150828", c(4:5)],
                  by = "cell", all = T, suffixes = c(".141009", ".150828"))

# add new factor level to account for missing data
levels(change.b$type.141009) <- levels(change.b$type.150828) <- 
    levels(change.g$type.141009) <- levels(change.g$type.150828) <-
    levels(change.w$type.141009) <- levels(change.w$type.150828) <- c(levels(df$type), "-")

change.b[is.na(change.b)] <- "-"
change.g[is.na(change.g)] <- "-"
change.w[is.na(change.w)] <- "-"


xt.change.b <- xtabs(~ type.141009 + type.150828, data = change.b)
xt.change.g <- xtabs(~ type.141009 + type.150828, data = change.g)
xt.change.w <- xtabs(~ type.141009 + type.150828, data = change.w)

xt.change <- cbind(xtabs(~ type.141009 + type.150828, data = change.b),
                   xtabs(~ type.141009 + type.150828, data = change.g),
                   xtabs(~ type.141009 + type.150828, data = change.w))

colnames(xt.change) <- rep(c("Dead", "Hot", "Noisy", "Bright", "Dim", "-"), 3)
rownames(xt.change) <- c("Dead", "Hot", "Noisy", "Bright", "Dim", "-")
xt.change[xt.change == 0] <- NA

addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- -1
addtorow$command <- c('& \\multicolumn{6}{c|}{Black}
                      & \\multicolumn{6}{c|}{Grey}
                      & \\multicolumn{6}{c}{White} \\\\\n')

print(xtable(xt.change, 
             align = "l|cccccc|cccccc|cccccc",
             caption = "Change in classification of individual pixels between first (row) and last (column) acquisitions"),
      caption.placement = "top", 
      add.to.row = addtorow, include.colnames = T,
      hline.after = c(0),
      size = "tiny", 
      NA.string = "",
      table.placement = "!h")
@

<<numbers-for-venn>>=
df1 <- df[df$src %in% c("b.141009", "g.141009", "w.141009"),]
df1.intersect <- c(table(apply(table(df1$cell, df1$src)[,c(1,3,5)], 1, paste, collapse = "")))

df2 <- df[df$src %in% c("b.150828", "g.150828", "w.150828"),]
df2.intersect <- c(table(apply(table(df2$cell, df2$src)[,c(2,4,6)], 1, paste, collapse = "")))
@

<<ppp-plots, out.width = '.49\\textwidth'>>=
ppp.b.141009 <- ppp(df$row[df$src == "b.141009"], 
             df$col[df$src == "b.141009"], c(1,1996), c(1,1996), 
             marks = df$type[df$src == "b.141009"])
ppp.b.150828 <- ppp(df$row[df$src == "b.150828"], 
             df$col[df$src == "b.150828"], c(1,1996), c(1,1996), 
             marks = df$type[df$src == "b.150828"])

ppp.g.141009 <- ppp(df$row[df$src == "g.141009"], 
             df$col[df$src == "g.141009"], c(1,1996), c(1,1996), 
             marks = df$type[df$src == "g.141009"])
ppp.g.150828 <- ppp(df$row[df$src == "g.150828"], 
             df$col[df$src == "g.150828"], c(1,1996), c(1,1996), 
             marks = df$type[df$src == "g.150828"])

ppp.w.141009 <- ppp(df$row[df$src == "w.141009"], 
             df$col[df$src == "w.141009"], c(1,1996), c(1,1996), 
             marks = df$type[df$src == "w.141009"])
ppp.w.150828 <- ppp(df$row[df$src == "w.150828"], 
             df$col[df$src == "w.150828"], c(1,1996), c(1,1996), 
             marks = df$type[df$src == "w.150828"])

par(mar = c(1,1,1,1), xpd = F)

plot.ppp(ppp.b.141009, pch = 20, legend = F, 
         main = "Black channel - 14.10.09",
         cols = bad.pixel.cols)
draw.panels()

plot.ppp(ppp.b.150828, pch = 20, legend = F, 
         main = "Black channel - 15.08.28",
         cols = bad.pixel.cols)
draw.panels()

plot.ppp(ppp.g.141009, pch = 20, legend = F, 
         main = "Grey channel - 14.10.09",
         cols = bad.pixel.cols)
draw.panels()

plot.ppp(ppp.g.150828, pch = 20, legend = F, 
         main = "Grey channel - 15.08.28",
         cols = bad.pixel.cols)
draw.panels()

plot.ppp(ppp.w.141009, pch = 20, legend = F, 
         main = "White channel - 14.10.09",
         cols = bad.pixel.cols)
draw.panels()

plot.ppp(ppp.w.150828, pch = 20, legend = F, 
         main = "White channel - 15.08.28",
         cols = bad.pixel.cols)
draw.panels()
@

\newpage
\section*{Effect of changes in threshold values}

<<plot-threshold-diffs, out.width = '.325\\textwidth'>>=
noise <- read.csv("../../Other-data/Noise.csv")
brightness <- read.csv("../../Other-data/Brightness.csv")

plot(c(1:9), noise[c(2:10), 1], type = "o", pch = 1, lty = 3, ylim = c(0,2500),
     xlab = "Threshold: # sigma above median sigma",
     ylab = "# 'noisy' pixels falling above threshold",
     main = "Effect of moving threshold on noise classification")
points(c(1:9), noise[c(2:10), 2], type = "o", pch = 20, lty = 1, col = "black")

points(c(1:9), noise[c(2:10), 3], type = "o", pch = 1, lty = 3, col = "grey")
points(c(1:9), noise[c(2:10), 4], type = "o", pch = 20, lty = 1, col = "grey")

points(c(1:9), noise[c(2:10), 5], type = "o", pch = 1, lty = 3, col = "gold")
points(c(1:9), noise[c(2:10), 6], type = "o", pch = 20, lty = 1, col = "gold")

abline (v = 6, col = "red")

plot(brightness[c(1:9), 1], brightness[c(1:9), 2], type = "o", pch = 1, lty = 3, ylim = c(0,2500),
     xlab = "Threshold: multiple of median pixel value",
     ylab = "# 'bad' pixels falling below threshold",
     main = "Effect of moving threshold on 'underperforming dark' classification")
points(brightness[c(1:9), 1], brightness[c(1:9), 3], type = "o", pch = 20, lty = 1, col = "black")

points(brightness[c(1:9), 1], brightness[c(1:9), 4], type = "o", pch = 1, lty = 3, col = "grey")
points(brightness[c(1:9), 1], brightness[c(1:9), 5], type = "o", pch = 20, lty = 1, col = "grey")

points(brightness[c(1:9), 1], brightness[c(1:9), 6], type = "o", pch = 1, lty = 3, col = "gold")
points(brightness[c(1:9), 1], brightness[c(1:9), 7], type = "o", pch = 20, lty = 1, col = "gold")
abline(v = 0.45, col = "red")

plot(brightness[c(11:20), 1], brightness[c(11:20), 2], type = "o", pch = 1, lty = 3, ylim = c(0,2500),
     xlab = "Threshold: multiple of median pixel value",
     ylab = "# 'bad' pixels falling above threshold",
     main = "Effect of moving threshold on 'underperforming bright' classification")
points(brightness[c(11:20), 1], brightness[c(11:20), 3], type = "o", pch = 20, lty = 1, col = "black")

points(brightness[c(11:20), 1], brightness[c(11:20), 4], type = "o", pch = 1, lty = 3, col = "grey")
points(brightness[c(11:20), 1], brightness[c(11:20), 5], type = "o", pch = 20, lty = 1, col = "grey")

points(brightness[c(11:20), 1], brightness[c(11:20), 6], type = "o", pch = 1, lty = 3, col = "gold")
points(brightness[c(11:20), 1], brightness[c(11:20), 7], type = "o", pch = 20, lty = 1, col = "gold")
abline(v = 1.5, col = "red")

@



\end{document}